// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: get_user_reading.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const getUserReading = `-- name: GetUserReading :many
SELECT book_id, status, rating FROM user_reading
WHERE user_id = $1
`

type GetUserReadingRow struct {
	BookID uuid.UUID
	Status ReadingStatus
	Rating int32
}

func (q *Queries) GetUserReading(ctx context.Context, userID uuid.UUID) ([]GetUserReadingRow, error) {
	rows, err := q.db.QueryContext(ctx, getUserReading, userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetUserReadingRow
	for rows.Next() {
		var i GetUserReadingRow
		if err := rows.Scan(&i.BookID, &i.Status, &i.Rating); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
