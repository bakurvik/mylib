// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: get_user_reading_by_book.sql

package database

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const getUserReadingByBook = `-- name: GetUserReadingByBook :one
SELECT status, rating, start_date, finish_date FROM user_reading
WHERE user_id = $1 AND book_id = $2
`

type GetUserReadingByBookParams struct {
	UserID uuid.UUID
	BookID uuid.UUID
}

type GetUserReadingByBookRow struct {
	Status     ReadingStatus
	Rating     int32
	StartDate  sql.NullTime
	FinishDate sql.NullTime
}

func (q *Queries) GetUserReadingByBook(ctx context.Context, arg GetUserReadingByBookParams) (GetUserReadingByBookRow, error) {
	row := q.db.QueryRowContext(ctx, getUserReadingByBook, arg.UserID, arg.BookID)
	var i GetUserReadingByBookRow
	err := row.Scan(
		&i.Status,
		&i.Rating,
		&i.StartDate,
		&i.FinishDate,
	)
	return i, err
}
