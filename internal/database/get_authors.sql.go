// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: get_authors.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const getAuthors = `-- name: GetAuthors :many
SELECT id, first_name, family_name FROM authors
`

type GetAuthorsRow struct {
	ID         uuid.UUID
	FirstName  string
	FamilyName string
}

func (q *Queries) GetAuthors(ctx context.Context) ([]GetAuthorsRow, error) {
	rows, err := q.db.QueryContext(ctx, getAuthors)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetAuthorsRow
	for rows.Next() {
		var i GetAuthorsRow
		if err := rows.Scan(&i.ID, &i.FirstName, &i.FamilyName); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
