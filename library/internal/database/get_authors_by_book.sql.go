// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: get_authors_by_book.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const getAuthorsByBook = `-- name: GetAuthorsByBook :many
SELECT author_id FROM book_authors
WHERE book_id = $1
`

func (q *Queries) GetAuthorsByBook(ctx context.Context, bookID uuid.UUID) ([]uuid.UUID, error) {
	rows, err := q.db.QueryContext(ctx, getAuthorsByBook, bookID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []uuid.UUID
	for rows.Next() {
		var author_id uuid.UUID
		if err := rows.Scan(&author_id); err != nil {
			return nil, err
		}
		items = append(items, author_id)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
