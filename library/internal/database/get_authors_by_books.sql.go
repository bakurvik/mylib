// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: get_authors_by_books.sql

package database

import (
	"context"

	"github.com/google/uuid"
	"github.com/lib/pq"
)

const getAuthorsByBooks = `-- name: GetAuthorsByBooks :many
SELECT book_id, author_id FROM book_authors
WHERE book_id IN (SELECT UNNEST($1::UUID[]))
`

type GetAuthorsByBooksRow struct {
	BookID   uuid.UUID
	AuthorID uuid.UUID
}

func (q *Queries) GetAuthorsByBooks(ctx context.Context, dollar_1 []uuid.UUID) ([]GetAuthorsByBooksRow, error) {
	rows, err := q.db.QueryContext(ctx, getAuthorsByBooks, pq.Array(dollar_1))
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetAuthorsByBooksRow
	for rows.Next() {
		var i GetAuthorsByBooksRow
		if err := rows.Scan(&i.BookID, &i.AuthorID); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
