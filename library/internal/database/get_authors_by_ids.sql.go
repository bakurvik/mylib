// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: get_authors_by_ids.sql

package database

import (
	"context"

	"github.com/google/uuid"
	"github.com/lib/pq"
)

const getAuthorsByIDs = `-- name: GetAuthorsByIDs :many
SELECT id, full_name FROM authors
WHERE id IN (SELECT UNNEST($1::UUID[]))
`

type GetAuthorsByIDsRow struct {
	ID       uuid.UUID
	FullName string
}

func (q *Queries) GetAuthorsByIDs(ctx context.Context, dollar_1 []uuid.UUID) ([]GetAuthorsByIDsRow, error) {
	rows, err := q.db.QueryContext(ctx, getAuthorsByIDs, pq.Array(dollar_1))
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetAuthorsByIDsRow
	for rows.Next() {
		var i GetAuthorsByIDsRow
		if err := rows.Scan(&i.ID, &i.FullName); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
