// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: search_book.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const searchBooks = `-- name: SearchBooks :many
SELECT id, title, ts_rank(tsv, plainto_tsquery('english', $1)) AS rank
FROM books WHERE tsv @@ plainto_tsquery('english', $1)
ORDER BY rank DESC
LIMIT $2
`

type SearchBooksParams struct {
	PlaintoTsquery string
	Limit          int32
}

type SearchBooksRow struct {
	ID    uuid.UUID
	Title string
	Rank  float32
}

func (q *Queries) SearchBooks(ctx context.Context, arg SearchBooksParams) ([]SearchBooksRow, error) {
	rows, err := q.db.QueryContext(ctx, searchBooks, arg.PlaintoTsquery, arg.Limit)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []SearchBooksRow
	for rows.Next() {
		var i SearchBooksRow
		if err := rows.Scan(&i.ID, &i.Title, &i.Rank); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
