// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: get_books.sql

package database

import (
	"context"

	"github.com/google/uuid"
	"github.com/lib/pq"
)

const getBooks = `-- name: GetBooks :many
SELECT id, title FROM books
WHERE id IN (SELECT UNNEST($1::UUID[]))
`

type GetBooksRow struct {
	ID    uuid.UUID
	Title string
}

func (q *Queries) GetBooks(ctx context.Context, dollar_1 []uuid.UUID) ([]GetBooksRow, error) {
	rows, err := q.db.QueryContext(ctx, getBooks, pq.Array(dollar_1))
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetBooksRow
	for rows.Next() {
		var i GetBooksRow
		if err := rows.Scan(&i.ID, &i.Title); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
