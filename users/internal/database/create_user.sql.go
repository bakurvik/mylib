// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: create_user.sql

package database

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (id, login_name, email, birth_date, hashed_password, created_at, updated_at)
VALUES (
    gen_random_uuid(), $1, $2, $3, $4, NOW(), NOW()
)
RETURNING id
`

type CreateUserParams struct {
	LoginName      string
	Email          string
	BirthDate      sql.NullTime
	HashedPassword string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (uuid.UUID, error) {
	row := q.db.QueryRowContext(ctx, createUser,
		arg.LoginName,
		arg.Email,
		arg.BirthDate,
		arg.HashedPassword,
	)
	var id uuid.UUID
	err := row.Scan(&id)
	return id, err
}
