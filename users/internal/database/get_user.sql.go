// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: get_user.sql

package database

import (
	"context"
)

const getUser = `-- name: GetUser :many
SELECT login_name, email FROM users
WHERE login_name = $1 OR email = $2
`

type GetUserParams struct {
	LoginName string
	Email     string
}

type GetUserRow struct {
	LoginName string
	Email     string
}

func (q *Queries) GetUser(ctx context.Context, arg GetUserParams) ([]GetUserRow, error) {
	rows, err := q.db.QueryContext(ctx, getUser, arg.LoginName, arg.Email)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetUserRow
	for rows.Next() {
		var i GetUserRow
		if err := rows.Scan(&i.LoginName, &i.Email); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
